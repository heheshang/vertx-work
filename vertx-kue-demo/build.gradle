configure(allprojects) { project ->
    ext {
        vertxVersion = "3.5.0"
    }
    apply plugin: 'java'
    repositories {
        maven { url "http://maven.aliyun.com/nexus/content/groups/public/" }
        mavenCentral()
    }
    dependencies {
        compile("io.vertx:vertx-core:${vertxVersion}")
        compile("io.vertx:vertx-codegen:${vertxVersion}")
        compile("io.vertx:vertx-rx-java:${vertxVersion}")
        compile("io.vertx:vertx-hazelcast:${vertxVersion}")
        compile("io.vertx:vertx-lang-ruby:${vertxVersion}")

        compile group: 'commons-collections', name: 'commons-collections', version: '3.2'
        compile group: 'org.slf4j', name:'slf4j-api', version: '1.7.2'
        compile group: 'ch.qos.logback', name:'logback-classic', version: '1.0.9'
        compile group: 'ch.qos.logback', name:'logback-core', version: '1.0.9'
        compileOnly 'org.projectlombok:lombok:1.18.4'

        testCompile("io.vertx:vertx-unit:${vertxVersion}")
        testCompile group: 'junit', name: 'junit', version: '4.12'
    }
    sourceSets {
        main {
            java {
                srcDirs += 'src/main/generated'
            }
        }
    }
    compileJava {
        targetCompatibility = 1.8
        sourceCompatibility = 1.8
    }
}
project("kue-core") {
    dependencies {
        compile("io.vertx:vertx-redis-client:${vertxVersion}")
        compile("io.vertx:vertx-service-proxy:${vertxVersion}")
    }
    jar {
        archiveName = 'vertx-blueprint-kue-core.jar'
        from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
        manifest {
            attributes 'Main-Class': 'io.vertx.core.Launcher'
            attributes 'Main-Verticle': 'com.vertx.kue.queue.KueVerticle'
        }
    }
    task annotationProcessing(type: JavaCompile, group: 'build') { // codegen
        source = sourceSets.main.java
        classpath = configurations.compile
        destinationDir = project.file('src/main/generated')
        options.compilerArgs = [
                "-proc:only",
                "-processor", "io.vertx.codegen.CodeGenProcessor",
                "-AoutputDirectory=${project.projectDir}/src/main"
        ]
    }
    compileJava {
        targetCompatibility = 1.8
        sourceCompatibility = 1.8
        dependsOn annotationProcessing
    }
}
project("kue-http") {
    dependencies {
        compile(project(":kue-core"))
        compile("io.vertx:vertx-web:${vertxVersion}")
        compile("io.vertx:vertx-web-templ-jade:${vertxVersion}")
    }
    jar {
        archiveName = 'vertx-blueprint-kue-http.jar'
        from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
        manifest {
            attributes 'Main-Class': 'io.vertx.core.Launcher'
            attributes 'Main-Verticle': 'io.vertx.blueprint.kue.http.KueHttpVerticle'
        }
    }
}
project("kue-example") {
    dependencies {
        compile(project(":kue-core"))
    }
    jar {
        archiveName = 'vertx-blueprint-kue-example.jar'
        from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
        manifest {
            attributes 'Main-Class': 'io.vertx.core.Launcher'
            attributes 'Main-Verticle': 'io.vertx.blueprint.kue.example.LearningVertxVerticle'
        }
    }
}
task wrapper(type: Wrapper) {
    gradleVersion = '4.8'
}